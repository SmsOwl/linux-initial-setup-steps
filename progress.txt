Main goals:
1. Machine learning workstation that is well configured
2. Installation steps, helpful info and easy backup/restore
3. Cuda and jupyter installed and using local hardware


Hardware:
  - Z390 AORUS ELITE
  - i5-9600KF CPU @ 3.70GHz
  - GA106 GeForce RTX 3060 Lite Hash Rate
  - 16GB DIMM DDR4 Synchronous 2400 MHz
  - SSD 1TB

OS:
  - debian 12 x86_64 6.1.0-25-amd64
    https://www.debian.org/distrib/
  More info 'sudo lshw' and 'uname -a'

Debian installation:
  Official doc: https://www.debian.org/releases/bookworm/amd64/index

  Installing:
  - download debian iso from a reliable mirror, live version is nice, mistakes can be corrected without complete OS reinstall
  - insert usb and check its name with 'df' command line
  - create installation media (usb drive will be wiped)
      'sudo dd bs=4M if=/media/username/Downloads/isos/debian-version.iso of=/dev/sdg status=progress &&sync'
      arguments: if= is path to downloaded iso file, of= is path to usb drive identified by 'df'
  - check BIOS/UEFI settings to allow usb boot
  - boot from usb, partition and install

  Useful info:
    
    admin password reset:
    Edit GRUB line before OS is booted. 'e' advanced options or something like that.
    At the end of the line that is loading linux kernel ending with 'ro  quiet' add 'rw init=/bin/bash'. It will drop you into bash console with read and write permissions to init file after system boot.
    Boot OS, edit admin password with 'passwd' command. 'passwd username' command changes password of another user.
    Reboot with 'exec /sbin/init'

    problem with multiboot sectors:

    Boot partition can be wiped, damaged or something. To restore windows10 boot info:
    Burn Windows to USB
    Plug the USB into your computer
    Start the computer and press Esc (or whatever key you use to access the boot menu)
    Select the USB in the boot menu
    Choose language and press next
    Select Repair your computer
    Select Advanced
    Select Command prompt
    Enter the following commands:
    bootrec /fixmb
    bootrec /fixboot
    Note: it's ok if the above step returned access denied or something like that
    bootrec /rebuildbcd
    bcdboot c:\windows /s c:
    Then reboot and repeat the steps from number 3 to 7
    Now instead of opening the command prompt choose Fix startup problems
    After that you are done.
    
    debian boot problems:
    boot to some linux usb
    sudo apt install -y wget;
    wget -O- https://sourceforge.net/projects/boot-repair/files/key.gpg | sudo tee /etc/apt/keyrings/boot-repair.gpg;
    echo 'deb [signed-by=/etc/apt/keyrings/boot-repair.gpg] https://ppa.launchpadcontent.net/yannubuntu/boot-repair/ubuntu noble main' | sudo tee /etc/apt/sources.list.d/boot-repair.list;
    sudo apt update && sudo apt install -y boot-repair
    run boot-repair program and try to auto repair boot sectors


Backup with rsync:
    Rsync can be done when system is running, but writing something while rsync is running may corrupt the backup file.
    Best to do it using live boot media and rsyncing partitionA to partitionB.

    Some directories should be excluded when rsyncing. Keep directory itself, just don't backup files inside.
    /boot - no need with simple setups, it's better to boot-repair after backup recovery
    /proc - historical directory, contains info about running processes, it's recreated every time system starts, no need to backup
    /sys - same as proc, but created more recently
    /dev - contains files representing devices attached to the system, usually dynamically created, backup may be a good idea if it's static and backup is recovered to the same machine (unusual)
    /mnt - mounted devices, no need to backup some usb while doing system backup, hand-mounting mounts here, should be used by sysadmin
    /media - mounted devices, new way, system mounts here
    /run - "temporary filesystem containing volatile runtime data"
    /lost+found - files deleted or lost in disk operation (fsck for example)
    /tmp - temporary files, no need to backup
    /var/cache - caches can be regenerated, no point in backing them up
    /var/tmp
    optionally excluded:
    /var/log

    
    sudo rsync -aAXv --stats --progress / --exclude={"/dev/*","/proc/*","/sys/*","/tmp/*","/run/*","/mnt/*","/media/*","/lost+found"} /mnt/disk2

    sudo rsync -axHAXh --info=progress2 /media/$USER/Bookworm/ --exclude={"/boot/*","/proc/*","/sys/*","/dev/*","/mnt/*","/media/*","/run/*","/lost+found","/tmp/*","/var/cache/*","/var/tmp/*"} /media/$USER/System-Backups/Debian/Snapshot-YY.MM.DD -n;
      
      slash after source is important, keep it
      after dry-run, remove -n at the end of command to do real backup
      to restore backup, identify disks and just do rsync with reversed source/destination and remove --exclude argument

    -a - archive mode - (-rlptgoD) recursive, symbolic links, permissions, modif times, group, owner, device files - those are preserved in transfer
    -x - don't cross filesystem boundraries
    -H - preserve hard links
    -A - preserve ACLs
    -X - preserve extended attributes
    -h - human-readable
    -v - verbose
    --delete - delete extraneous files from destination dir
    --info=progress2 - information about transfer progress, speed, files sent and still left
    -n - dry-run

Steps after install





















